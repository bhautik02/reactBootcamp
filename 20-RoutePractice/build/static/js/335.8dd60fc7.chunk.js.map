{"version":3,"file":"static/js/335.8dd60fc7.chunk.js","mappings":"6LACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAaC,SAAEJ,EAAMI,UAC9C,ECHA,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2B,SCqEnI,EAhEkB,SAACJ,GAEjB,IAAMK,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UACfE,GAAWC,EAAAA,EAAAA,MAsBjB,OACER,EAAAA,EAAAA,KAAAS,EAAAA,SAAA,CAAAN,UAOEH,EAAAA,EAAAA,KAACU,EAAI,CAAAP,UACHQ,EAAAA,EAAAA,MAAA,QACEC,QAfiB,WAEvB,EAcMX,UAAWC,EACXW,SAhCR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBZ,EAAea,QAAQC,MACvCC,EAAcb,EAAaW,QAAQC,MAEzCE,QAAQC,IAAIL,GACZI,QAAQC,IAAIF,GAIZpB,EAAMuB,WAAW,CAAEC,OAAQP,EAAeQ,KAAML,IAChDZ,EAAS,UACX,EAmBoCJ,SAAA,CAC3BJ,EAAM0B,YACLzB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBC,UAC9BH,EAAAA,EAAAA,KAAC0B,EAAAA,EAAc,OAInBf,EAAAA,EAAAA,MAAA,OAAKV,UAAWC,EAAgBC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,SAAO2B,QAAQ,SAAQxB,SAAC,YACxBH,EAAAA,EAAAA,KAAA,SAAO4B,KAAK,OAAOC,GAAG,SAASC,IAAK1B,QAEtCO,EAAAA,EAAAA,MAAA,OAAKV,UAAWC,EAAgBC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,SAAO2B,QAAQ,OAAMxB,SAAC,UACtBH,EAAAA,EAAAA,KAAA,YAAU6B,GAAG,OAAOE,KAAK,IAAID,IAAKxB,QAEpCN,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBC,UAC9BH,EAAAA,EAAAA,KAAA,UAAQC,UAAU,MAAM2B,KAAK,SAAQzB,SAAC,sBAQlD,E,kBC1CA,EApBiB,WACf,IAAMI,GAAWC,EAAAA,EAAAA,MACjBwB,GAAgCC,EAAAA,EAAAA,GAAQC,EAAAA,IAAhCC,EAAWH,EAAXG,YAAaC,EAAMJ,EAANI,QAErBC,EAAAA,EAAAA,YAAU,WACO,cAAXD,GACF7B,EAAS,UAEb,GAAG,IAMH,OACEP,EAAAA,EAAAA,KAACsC,EAAS,CACRb,UAAsB,YAAXW,EACXd,WAPsB,SAACiB,GACzBnB,QAAQC,IAAIkB,GACZJ,EAAYI,EACd,GAMF,C","sources":["webpack://20-routepractice/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://20-routepractice/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/NewQuote.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__9h8Dh\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__ogBoi\",\"loading\":\"QuoteForm_loading__gyIuQ\",\"control\":\"QuoteForm_control__8SqBM\",\"actions\":\"QuoteForm_actions__I8AC6\"};","import { useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Card from \"./../UI/Card\";\nimport classes from \"./QuoteForm.module.css\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nconst QuoteForm = (props) => {\n  // const [isEntering, setIsEntering] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const navigate = useNavigate();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    console.log(enteredAuthor);\n    console.log(enteredText);\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n    navigate(\"/quotes\");\n  }\n\n  const formFocusHandler = () => {\n    // console.log(\"Focus!\");\n    // setIsEntering(true);\n  };\n\n  return (\n    <>\n      {/* <Prompt\n        when={isEntering}\n        message={() =>\n          \"Are you sure u want to leave? All your data will be lost!!!\"\n        }\n      /> */}\n      <Card>\n        <form\n          onFocus={formFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className=\"btn\" type=\"submit\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import QuoteForm from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../libs/api\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst NewQuote = () => {\n  const navigate = useNavigate();\n  const { sendRequest, status } = useHttp(addQuote);\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      navigate(\"/qoutes\");\n    }\n  }, []);\n\n  const onAddQuoteHandler = (quoteData) => {\n    console.log(quoteData);\n    sendRequest(quoteData);\n  };\n  return (\n    <QuoteForm\n      isLoading={status === \"pending\"}\n      onAddQuote={onAddQuoteHandler}></QuoteForm>\n  );\n};\nexport default NewQuote;\n"],"names":["props","_jsx","className","classes","children","authorInputRef","useRef","textInputRef","navigate","useNavigate","_Fragment","Card","_jsxs","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","console","log","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","_useHttp","useHttp","addQuote","sendRequest","status","useEffect","QuoteForm","quoteData"],"sourceRoot":""}