{"version":3,"file":"static/js/239.265ca11e.chunk.js","mappings":"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","sources":["webpack://20-routepractice/./src/components/comments/Comments.module.css?d88e","webpack://20-routepractice/./src/components/comments/NewCommentForm.module.css?81c1","components/comments/NewCommentForm.js","components/comments/Comments.js","webpack://20-routepractice/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","pages/QuoteDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"Comments_comments__9cxIN\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"NewCommentForm_form__C3cQf\",\"loading\":\"NewCommentForm_loading__aSq20\",\"control\":\"NewCommentForm_control__iR6jS\",\"actions\":\"NewCommentForm_actions__NC323\"};","import { useRef } from \"react\";\n\nimport classes from \"./NewCommentForm.module.css\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../libs/api\";\n\nconst NewCommentForm = (props) => {\n  const { sendRequest, error, status } = useHttp(addComment, true);\n\n  const commentTextRef = useRef();\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState } from 'react';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm />}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n","// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__dE8qA\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Route, Routes, useParams, Link, useLocation } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../libs/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nconst QuoteDetails = () => {\n  const params = useParams();\n  const location = useLocation();\n  const {\n    sendRequest,\n    data: loadedData,\n    error,\n    status,\n  } = useHttp(getSingleQuote, true);\n\n  const { quoteId } = params;\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  const qoute = location.pathname.split(\"/\")[1];\n  const currentUrl = location.pathname === `/${qoute}/${params.quoteId}`;\n\n  if (status === \"completed\" && !loadedData) {\n    return (\n      <h2 className=\"centered\" style={{ color: \"red\" }}>\n        No Quote Found with this ID!!!\n      </h2>\n    );\n  }\n  // console.log(loadedData);\n\n  return (\n    <>\n      {/* <h1>Welcome to QuoteDetails</h1>\n      <h2>{params.quoteId}</h2> */}\n      <HighlightedQuote author={loadedData.author} text={loadedData.text} />\n      <Routes>\n        <Route path=\"/comments\" element={<Comments />}></Route>\n      </Routes>\n      {currentUrl && (\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${location.pathname}/comments`}>\n            Load a Comment\n          </Link>\n        </div>\n      )}\n    </>\n  );\n};\nexport default QuoteDetails;\n"],"names":["props","_useHttp","useHttp","addComment","commentTextRef","sendRequest","error","status","useRef","submitFormHandler","event","preventDefault","_jsxs","className","classes","onSubmit","children","_jsx","htmlFor","id","rows","ref","_useState","useState","_useState2","_slicedToArray","isAddingComment","setIsAddingComment","onClick","NewCommentForm","text","author","params","useParams","location","useLocation","getSingleQuote","loadedData","data","quoteId","useEffect","LoadingSpinner","qoute","pathname","split","currentUrl","concat","_Fragment","HighlightedQuote","Routes","Route","path","element","Comments","Link","to","style","color"],"sourceRoot":""}