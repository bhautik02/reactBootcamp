{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/React-Folder/20-RoutePractice/src/pages/QuoteDetails.jsx\",\n  _s = $RefreshSig$();\nimport { Route, Routes, useParams } from \"react-router\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Bhautik\",\n  text: \"Learning React is Fun!\"\n}, {\n  id: \"q2\",\n  author: \"Bhautik Jani\",\n  text: \"Learning React is Awesome!\"\n}, {\n  id: \"q3\",\n  author: \"Bhautik Ashvinbhai Jani\",\n  text: \"Learning React is Great!\"\n}];\nconst QuoteDetails = () => {\n  _s();\n  const params = useParams();\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      content: \"centered\",\n      children: \"No Quote Found with this ID!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      author: quote.author,\n      text: quote.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/comments\",\n        element: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(QuoteDetails, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n_c = QuoteDetails;\nexport default QuoteDetails;\nvar _c;\n$RefreshReg$(_c, \"QuoteDetails\");","map":{"version":3,"names":["Route","Routes","useParams","Comments","HighlightedQuote","jsxDEV","_jsxDEV","Fragment","_Fragment","DUMMY_QUOTES","id","author","text","QuoteDetails","_s","params","quote","find","quoteId","content","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/home/dev/Desktop/React-Folder/20-RoutePractice/src/pages/QuoteDetails.jsx"],"sourcesContent":["import { Route, Routes, useParams } from \"react-router\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\n\nconst DUMMY_QUOTES = [\n  {\n    id: \"q1\",\n    author: \"Bhautik\",\n    text: \"Learning React is Fun!\",\n  },\n  {\n    id: \"q2\",\n    author: \"Bhautik Jani\",\n    text: \"Learning React is Awesome!\",\n  },\n  {\n    id: \"q3\",\n    author: \"Bhautik Ashvinbhai Jani\",\n    text: \"Learning React is Great!\",\n  },\n];\n\nconst QuoteDetails = () => {\n  const params = useParams();\n  const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\n\n  if (!quote) {\n    return <p content=\"centered\">No Quote Found with this ID!</p>;\n  }\n\n  return (\n    <>\n      {/* <h1>Welcome to QuoteDetails</h1>\n      <h2>{params.quoteId}</h2> */}\n\n      <HighlightedQuote author={quote.author} text={quote.text} />\n\n      <Routes>\n        <Route path=\"/comments\" element={<Comments />}></Route>\n      </Routes>\n    </>\n  );\n};\nexport default QuoteDetails;\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,MAAM,EAAEC,SAAS,QAAQ,cAAc;AACvD,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,gBAAgB,MAAM,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErE,MAAMC,YAAY,GAAG,CACnB;EACEC,EAAE,EAAE,IAAI;EACRC,MAAM,EAAE,SAAS;EACjBC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,IAAI;EACRC,MAAM,EAAE,cAAc;EACtBC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,IAAI;EACRC,MAAM,EAAE,yBAAyB;EACjCC,IAAI,EAAE;AACR,CAAC,CACF;AAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,MAAM,GAAGb,SAAS,CAAC,CAAC;EAC1B,MAAMc,KAAK,GAAGP,YAAY,CAACQ,IAAI,CAAED,KAAK,IAAKA,KAAK,CAACN,EAAE,KAAKK,MAAM,CAACG,OAAO,CAAC;EAEvE,IAAI,CAACF,KAAK,EAAE;IACV,oBAAOV,OAAA;MAAGa,OAAO,EAAC,UAAU;MAAAC,QAAA,EAAC;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC/D;EAEA,oBACElB,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBAIEd,OAAA,CAACF,gBAAgB;MAACO,MAAM,EAAEK,KAAK,CAACL,MAAO;MAACC,IAAI,EAAEI,KAAK,CAACJ;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE5DlB,OAAA,CAACL,MAAM;MAAAmB,QAAA,eACLd,OAAA,CAACN,KAAK;QAACyB,IAAI,EAAC,WAAW;QAACC,OAAO,eAAEpB,OAAA,CAACH,QAAQ;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC;EAAA,eACT,CAAC;AAEP,CAAC;AAACV,EAAA,CApBID,YAAY;EAAA,QACDX,SAAS;AAAA;AAAAyB,EAAA,GADpBd,YAAY;AAqBlB,eAAeA,YAAY;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}