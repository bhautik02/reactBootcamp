{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/React-Folder/20-RoutePractice/src/components/quotes/QuoteList.js\",\n  _s = $RefreshSig$();\nimport { Fragment } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuoteList = props => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const sortQuotes = (quotes, ascending) => {\n    return quotes.sort((quoteA, quoteB) => {\n      if (ascending) {\n        return quoteA.id > quoteB.id ? 1 : -1;\n      } else {\n        return quoteA.id < quoteB.id ? 1 : -1;\n      }\n    });\n  };\n  const queryParams = new URLSearchParams(location.search);\n  const isAscending = queryParams.get(\"sort\") === \"asc\";\n  const sortedQuotes = sortQuotes(props.quotes, isAscending);\n  const clickHandler = () => {\n    console.log(location);\n    navigate(isAscending ? \"/quotes?sort=desc\" : \"/quotes?sort=asc\");\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickHandler,\n        children: [\"Sort \", isAscending ? \"Decending\" : \"Ascending\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: sortedQuotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteList, \"VDZHUspDq9N5O9RWjniBrjgIdAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = QuoteList;\nexport default QuoteList;\nvar _c;\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["Fragment","useNavigate","useLocation","QuoteItem","classes","jsxDEV","_jsxDEV","QuoteList","props","_s","navigate","location","sortQuotes","quotes","ascending","sort","quoteA","quoteB","id","queryParams","URLSearchParams","search","isAscending","get","sortedQuotes","clickHandler","console","log","children","className","sorting","onClick","fileName","_jsxFileName","lineNumber","columnNumber","list","map","quote","author","text","_c","$RefreshReg$"],"sources":["/home/dev/Desktop/React-Folder/20-RoutePractice/src/components/quotes/QuoteList.js"],"sourcesContent":["import { Fragment } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst QuoteList = (props) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const sortQuotes = (quotes, ascending) => {\n    return quotes.sort((quoteA, quoteB) => {\n      if (ascending) {\n        return quoteA.id > quoteB.id ? 1 : -1;\n      } else {\n        return quoteA.id < quoteB.id ? 1 : -1;\n      }\n    });\n  };\n\n  const queryParams = new URLSearchParams(location.search);\n  const isAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isAscending);\n\n  const clickHandler = () => {\n    console.log(location);\n    navigate(isAscending ? \"/quotes?sort=desc\" : \"/quotes?sort=asc\");\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={clickHandler}>\n          Sort {isAscending ? \"Decending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAE3D,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,UAAU,GAAGA,CAACC,MAAM,EAAEC,SAAS,KAAK;IACxC,OAAOD,MAAM,CAACE,IAAI,CAAC,CAACC,MAAM,EAAEC,MAAM,KAAK;MACrC,IAAIH,SAAS,EAAE;QACb,OAAOE,MAAM,CAACE,EAAE,GAAGD,MAAM,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;MACvC,CAAC,MAAM;QACL,OAAOF,MAAM,CAACE,EAAE,GAAGD,MAAM,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;MACvC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,WAAW,GAAG,IAAIC,eAAe,CAACT,QAAQ,CAACU,MAAM,CAAC;EACxD,MAAMC,WAAW,GAAGH,WAAW,CAACI,GAAG,CAAC,MAAM,CAAC,KAAK,KAAK;EAErD,MAAMC,YAAY,GAAGZ,UAAU,CAACJ,KAAK,CAACK,MAAM,EAAES,WAAW,CAAC;EAE1D,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzBC,OAAO,CAACC,GAAG,CAAChB,QAAQ,CAAC;IACrBD,QAAQ,CAACY,WAAW,GAAG,mBAAmB,GAAG,kBAAkB,CAAC;EAClE,CAAC;EAED,oBACEhB,OAAA,CAACN,QAAQ;IAAA4B,QAAA,gBACPtB,OAAA;MAAKuB,SAAS,EAAEzB,OAAO,CAAC0B,OAAQ;MAAAF,QAAA,eAC9BtB,OAAA;QAAQyB,OAAO,EAAEN,YAAa;QAAAG,QAAA,GAAC,OACxB,EAACN,WAAW,GAAG,WAAW,GAAG,WAAW;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACN7B,OAAA;MAAIuB,SAAS,EAAEzB,OAAO,CAACgC,IAAK;MAAAR,QAAA,EACzBJ,YAAY,CAACa,GAAG,CAAEC,KAAK,iBACtBhC,OAAA,CAACH,SAAS;QAERe,EAAE,EAAEoB,KAAK,CAACpB,EAAG;QACbqB,MAAM,EAAED,KAAK,CAACC,MAAO;QACrBC,IAAI,EAAEF,KAAK,CAACE;MAAK,GAHZF,KAAK,CAACpB,EAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAId,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEf,CAAC;AAAC1B,EAAA,CA3CIF,SAAS;EAAA,QACIN,WAAW,EACXC,WAAW;AAAA;AAAAuC,EAAA,GAFxBlC,SAAS;AA6Cf,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}