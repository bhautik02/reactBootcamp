{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/React-Folder/20-RoutePractice/src/pages/AllQuotes.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../libs/api\";\n\n// const DUMMY_QUOTES = [\n//   {\n//     id: \"q1\",\n//     author: \"Bhautik\",\n//     text: \"Learning React is Fun!\",\n//   },\n//   {\n//     id: \"q2\",\n//     author: \"Bhautik Jani\",\n//     text: \"Learning React is Awesome!\",\n//   },\n//   {\n//     id: \"q3\",\n//     author: \"Bhautik Ashvinbhai Jani\",\n//     text: \"Learning React is Great!\",\n//   },\n// ];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllQuotes = () => {\n  _s();\n  const {\n    sendRequest,\n    data: loadedQuotes,\n    status,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n  if (status === \"pending\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: loadedQuotes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n};\n_s(AllQuotes, \"g06zU+K3us3JHe4Bo/3tX487fq8=\", false, function () {\n  return [useHttp];\n});\n_c = AllQuotes;\nexport default AllQuotes;\nvar _c;\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"names":["useEffect","LoadingSpinner","NoQuotesFound","QuoteList","useHttp","getAllQuotes","jsxDEV","_jsxDEV","AllQuotes","_s","sendRequest","data","loadedQuotes","status","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","quotes","_c","$RefreshReg$"],"sources":["/home/dev/Desktop/React-Folder/20-RoutePractice/src/pages/AllQuotes.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../libs/api\";\n\n// const DUMMY_QUOTES = [\n//   {\n//     id: \"q1\",\n//     author: \"Bhautik\",\n//     text: \"Learning React is Fun!\",\n//   },\n//   {\n//     id: \"q2\",\n//     author: \"Bhautik Jani\",\n//     text: \"Learning React is Awesome!\",\n//   },\n//   {\n//     id: \"q3\",\n//     author: \"Bhautik Ashvinbhai Jani\",\n//     text: \"Learning React is Great!\",\n//   },\n// ];\n\nconst AllQuotes = () => {\n  const {\n    sendRequest,\n    data: loadedQuotes,\n    status,\n    error,\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound />;\n  }\n\n  return <QuoteList quotes={loadedQuotes} />;\n};\nexport default AllQuotes;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,aAAa,MAAM,oCAAoC;AAC9D,OAAOC,SAAS,MAAM,gCAAgC;AACtD,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,YAAY,QAAQ,aAAa;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IACJC,WAAW;IACXC,IAAI,EAAEC,YAAY;IAClBC,MAAM;IACNC;EACF,CAAC,GAAGV,OAAO,CAACC,YAAY,EAAE,IAAI,CAAC;EAC/BL,SAAS,CAAC,MAAM;IACdU,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,IAAIG,MAAM,KAAK,SAAS,EAAE;IACxB,oBACEN,OAAA;MAAKQ,SAAS,EAAC,UAAU;MAAAC,QAAA,eACvBT,OAAA,CAACN,cAAc;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAEV;EAEA,IAAIN,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAAS,QAAA,EAAIF;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACvB;EAEA,IAAIP,MAAM,KAAK,WAAW,KAAK,CAACD,YAAY,IAAIA,YAAY,CAACS,MAAM,KAAK,CAAC,CAAC,EAAE;IAC1E,oBAAOd,OAAA,CAACL,aAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC1B;EAEA,oBAAOb,OAAA,CAACJ,SAAS;IAACmB,MAAM,EAAEV;EAAa;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5C,CAAC;AAACX,EAAA,CA5BID,SAAS;EAAA,QAMTJ,OAAO;AAAA;AAAAmB,EAAA,GANPf,SAAS;AA6Bf,eAAeA,SAAS;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}